"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionRoutes = void 0;
const express_1 = require("express");
const validationRequest_1 = require("../../middleware/validationRequest");
const validateQuery_1 = require("../../middleware/validateQuery");
const checkAuth_1 = require("../../middleware/checkAuth");
const transaction_validation_1 = require("./transaction.validation");
const user_interface_1 = require("../user/user.interface");
const transaction_controller_1 = require("./transaction.controller");
const router = (0, express_1.Router)();
router.post("/add-money", (0, checkAuth_1.checkAuth)(user_interface_1.Role.USER), (0, validationRequest_1.validateRequest)(transaction_validation_1.addMoneyZodSchema), transaction_controller_1.TransactionControllers.addMoney);
router.post("/send-money", (0, checkAuth_1.checkAuth)(user_interface_1.Role.USER), (0, validationRequest_1.validateRequest)(transaction_validation_1.createTransactionZodSchema), transaction_controller_1.TransactionControllers.sendMoney);
router.post("/cash-in", (0, checkAuth_1.checkAuth)(user_interface_1.Role.AGENT, user_interface_1.Role.ADMIN), (0, validationRequest_1.validateRequest)(transaction_validation_1.createTransactionZodSchema), transaction_controller_1.TransactionControllers.cashIn);
router.post("/cash-out", (0, checkAuth_1.checkAuth)(user_interface_1.Role.USER, user_interface_1.Role.AGENT), (0, validationRequest_1.validateRequest)(transaction_validation_1.createTransactionZodSchema), transaction_controller_1.TransactionControllers.cashOut);
router.post("/admin-withdraw", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN), transaction_controller_1.TransactionControllers.adminWithdraw);
router.get("/my-transactions", (0, checkAuth_1.checkAuth)(...Object.values(user_interface_1.Role)), transaction_controller_1.TransactionControllers.getMyTransactions);
router.get("/all-transactions", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN), (0, validateQuery_1.validateQuery)(transaction_validation_1.getTransactionsQuerySchema), transaction_controller_1.TransactionControllers.getAllTransactions);
exports.TransactionRoutes = router;
